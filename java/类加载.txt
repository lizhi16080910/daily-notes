1、java里，类型的加载，连接，初始化都是在程序运行期间完成的。动态加载，动态连接
2、被动引用不会触发对类的初始化。
		子类引用父类的静态字段，不会触发父类的初始化。
		通过数组定义来引用类，不会触发此类的初始化。
		final static定义的常量，编译阶段存入常量池中，本质上并没有直接引用定义常量的类，因此不会触发定义常量类的初始化。
3、开发人员可以通过定义自己的类加载器去控制字节流的获取方式。
4、数组类本身不通过类加载器创建，是由java虚拟机直接创建的。
5、类加载阶段包括：加载，验证，连接，解析，准备，初始化，使用，卸载。
6、验证阶段包括：
	文件格式验证：基于二进制字节流进行的
	元数据验证：对语义进行分析，保证其符合语言规范
	字节码验证:
	符号引用验证：
7、准备阶段：是正式为类变量分配内存并设置类变量初始值的阶段，这些变量所使用的内存都将在方法区中进行分配。
		在准备阶段，所有static变量基本类型的初始值都为0，赋值实在初始化阶段完成的
8、解析;
	将常量池内的符号引用替换为直接引用的过程。
	符号引用:
	直接引用：指针，相对偏移量，或是句柄
	包括：
		类或接口的解析
		字段解析
		类方法解析
		接口方法解析
9、初始化
	初始化阶段是类加载的最后一个阶段。真正开始执行类中的java代码。